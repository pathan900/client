[{"D:\\reactJS\\instagram-clone\\client\\src\\index.js":"1","D:\\reactJS\\instagram-clone\\client\\src\\App.js":"2","D:\\reactJS\\instagram-clone\\client\\src\\reportWebVitals.js":"3","D:\\reactJS\\instagram-clone\\client\\src\\components\\Signup.js":"4","D:\\reactJS\\instagram-clone\\client\\src\\components\\Navbar.js":"5","D:\\reactJS\\instagram-clone\\client\\src\\components\\Profile.js":"6","D:\\reactJS\\instagram-clone\\client\\src\\components\\Signin.js":"7","D:\\reactJS\\instagram-clone\\client\\src\\components\\Home.js":"8","D:\\reactJS\\instagram-clone\\client\\src\\components\\CreatePost.js":"9","D:\\reactJS\\instagram-clone\\client\\src\\reducer\\userReducer.js":"10","D:\\reactJS\\instagram-clone\\client\\src\\components\\UserProfile.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":1740,"mtime":1615383210767,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":3938,"mtime":1617018805155,"results":"16","hashOfConfig":"13"},{"size":1370,"mtime":1612801050950,"results":"17","hashOfConfig":"13"},{"size":3617,"mtime":1617031302015,"results":"18","hashOfConfig":"13"},{"size":2036,"mtime":1612543551841,"results":"19","hashOfConfig":"13"},{"size":5617,"mtime":1613408222719,"results":"20","hashOfConfig":"13"},{"size":2829,"mtime":1613232785461,"results":"21","hashOfConfig":"13"},{"size":544,"mtime":1614407681749,"results":"22","hashOfConfig":"13"},{"size":5094,"mtime":1614337274069,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"gczfmz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"26"},"D:\\reactJS\\instagram-clone\\client\\src\\index.js",[],["56","57"],"D:\\reactJS\\instagram-clone\\client\\src\\App.js",["58","59"],"import React, { useEffect, createContext, useReducer, useContext } from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom'\nimport Home from './components/Home'\nimport Signup from './components/Signup'\nimport Signin from './components/Signin'\nimport Profile from './components/Profile'\nimport CreatePost from './components/CreatePost';\nimport {reducer, initialState} from './reducer/userReducer'\nimport UserProfile from './components/UserProfile';\n\n\nexport const UserContext = createContext()\n\nconst Routing = () => {\n  const history = useHistory()\n  const {state, dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(user){   //if user is present\n      dispatch({type:\"USER\", payload:user})\n    }\n    else{   //if user is not present then redirect to singin page\n      history.push(\"/signin\")\n    }\n  },[])\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route exact path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route exact path=\"/createpost\">\n        <CreatePost />\n      </Route>\n      <Route exact path=\"/profile/:userid\">\n        <UserProfile/>\n      </Route>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  console.log(state)\n  \n  return (\n    <UserContext.Provider value={{state, dispatch}}>\n    <BrowserRouter>\n      <Navbar />\n      <Routing />\n    </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","D:\\reactJS\\instagram-clone\\client\\src\\reportWebVitals.js",[],"D:\\reactJS\\instagram-clone\\client\\src\\components\\Signup.js",["60","61","62","63"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst Signup = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [url, setUrl] = useState(undefined); \r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        if(url){\r\n            uploadDetails()\r\n        }\r\n    },[url])\r\n    const uploadpic = () =>{\r\n        const data = new FormData\r\n        data.append(\"file\",image);\r\n        data.append(\"upload_preset\",\"instagram-clone\");\r\n        data.append(\"cloud_name\",\"abdulkaleem\");\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/abdulkaleem/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json())\r\n        .then(data =>{\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err =>{console.log(err)})\r\n    } \r\n    const uploadDetails = () =>{\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"invalid email\", classes: 'rounded #e53935 red darken-1' });\r\n            return\r\n        }\r\n        // if(!/^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/.test(password)){\r\n        //     M.toast({html: \"Password must be ALPHANUMERIC with both UPPER and LOWER case letter and a special character and of minimum 8 characters long\", classes: 'rounded #e53935 red darken-1'});\r\n        //     return\r\n        // }\r\n        fetch(\"/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password,\r\n                pic:url\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: 'rounded #e53935 red darken-1' });\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: 'rounded #e53935 #1de9b6 teal accent-3' });\r\n                    history.push(\"/signin\")\r\n                }\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    const PostData = () => {\r\n        if(image){\r\n            uploadpic()\r\n        }else{\r\n            uploadDetails()\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"card auth_card input-field\">\r\n                <h2 className=\"brand-logo\">Instagram</h2>\r\n                <input type=\"text\" placeholder=\"name\" value={name} onChange={e => setName(e.target.value)} />\r\n                <input type=\"email\" placeholder=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                <input type=\"password\" placeholder=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn waves-effect waves-light #42a5f5 blue lighten-1\">\r\n                        <span>Profile Image</span>\r\n                        <input type=\"file\" onChange={e => { setImage(e.target.files[0]) }} />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light #42a5f5 blue lighten-1\" onClick={() => PostData()}>Sign Up</button>\r\n                <Link to=\"/signin\">\r\n                    <p>Have an account? Log in</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","D:\\reactJS\\instagram-clone\\client\\src\\components\\Navbar.js",[],"D:\\reactJS\\instagram-clone\\client\\src\\components\\Profile.js",["64","65"],"import React,{useEffect,useState, useContext} from 'react'\r\nimport {UserContext} from '../App'\r\n\r\n\r\nconst Profile = () => {\r\n    const [mypics, setPics]=useState([])\r\n    const [image, setImage] = useState(\"\");\r\n    const {state, dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n        fetch('/profile',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res =>res.json())\r\n        .then(result =>{\r\n            setPics(result.myposts)\r\n            console.log(result)\r\n        })\r\n    },[])\r\n    useEffect(()=>{\r\n        if(image){\r\n            const data = new FormData\r\n            data.append(\"file\",image);\r\n            data.append(\"upload_preset\",\"instagram-clone\");\r\n            data.append(\"cloud_name\",\"abdulkaleem\");\r\n            fetch(\"\thttps://api.cloudinary.com/v1_1/abdulkaleem/image/upload\",{\r\n                method:\"post\",\r\n                body:data\r\n            }).then(res=>res.json())\r\n            .then(data =>{\r\n                fetch('/updatepic',{\r\n                    method:\"put\",\r\n                    headers:{\r\n                        \"Content-Type\":\"application/json\",\r\n                        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                    },\r\n                    body:JSON.stringify({\r\n                        pic:data.url\r\n                    })\r\n                }).then(res =>res.json())\r\n                .then(result =>{\r\n                    localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n                    dispatch({type:\"UPDATEPIC\", payload:result.pic})\r\n                })\r\n            })\r\n            .catch(err =>{console.log(err)})\r\n        }\r\n    },[image])\r\n    const updatePic = (file) =>{\r\n        setImage(file)\r\n\r\n    }\r\n    return (<div className=\"container\">\r\n        <div className=\"box row\">\r\n            <div className=\"col s12 m4\">\r\n                <img className=\"profile_pic\" src={state ? state.pic : \"\"} alt=\"profile_photo\"/>\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn waves-effect waves-light #42a5f5 blue lighten-1\">\r\n                        <span>Update Profile picture</span>\r\n                        <input type=\"file\" onChange={e => { updatePic(e.target.files[0]) }} />\r\n                    </div>\r\n                 \r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"col s12 m8\">\r\n                <h4>{state?state.name:\"Loading...\"}</h4>\r\n                <div className=\"details\">\r\n                    <div>\r\n                    <h6>{mypics.length}</h6>\r\n                    <h6>Posts</h6>\r\n                    </div>\r\n                    <div>\r\n                    <h6>{state ? state.followers.length : \"fetching...\"}</h6>\r\n                    <h6>Followers</h6>\r\n                    </div>\r\n                    <div>\r\n                    <h6>{state ? state.following.length :  \"fetching...\"}</h6>\r\n                    <h6>Following</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <h5>{state?state.name:\"Loading...\"}</h5>\r\n            <p>Marketing Manager</p>\r\n            <p>Content writer</p>\r\n            <p>Romania</p>\r\n        </div>\r\n\r\n        <div className=\"gallery\">\r\n        {\r\n            mypics.map(item=>{\r\n                return(\r\n                <img className=\"img\" src={item.photo} alt=\"post\" key={item._id}/>\r\n                )\r\n            })\r\n        }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","D:\\reactJS\\instagram-clone\\client\\src\\components\\Signin.js",["66"],"import React,{useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../App'\r\n\r\nconst Signin = () => {\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n    const postData = () =>{\r\n        fetch(\"/signin\", {\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",   \r\n            },\r\n            body:JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data =>{\r\n            if(data.error){\r\n                M.toast({html: data.error, classes: 'rounded #e53935 red darken-1'});\r\n            }\r\n            else{\r\n                localStorage.setItem(\"jwt\",data.token)\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                dispatch({type:\"USER\", payload:data.user}) // this will go to userReducer\r\n                M.toast({html: \"Signed in Successfully\", classes: 'rounded #e53935 #1de9b6 teal accent-3'});\r\n                history.push(\"/\");\r\n            }\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"card auth_card input-field\">\r\n                <h2 className=\"brand-logo\">Instagram</h2>\r\n                <input type=\"email\" placeholder=\"email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                <input type=\"password\" placeholder=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                <button className=\"btn waves-effect waves-light #42a5f5 blue lighten-1\" onClick={()=> postData()}>Log In</button>\r\n                <Link to=\"/signup\">\r\n                <p>Don't have an account? Sign up</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","D:\\reactJS\\instagram-clone\\client\\src\\components\\Home.js",["67","68","69","70","71"],"import React, { useState, useEffect, useContext} from 'react'\r\nimport {UserContext} from '../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([])\r\n    const {state, dispatch} = useContext(UserContext)\r\n    useEffect(() => {\r\n        fetch(\"/allposts\", {\r\n            headers: {\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setData(result.posts)\r\n            })\r\n            .catch(error => console.log(error))\r\n    }, [])\r\n//like\r\n    const like = (id) =>{\r\n        fetch(\"/like\", {\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res =>res.json())\r\n        .then(result =>{\r\n            console.log(result)\r\n            const newData = data.map(item =>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => console.log(err))\r\n    }\r\n    //unlike\r\n    const unlike = (id) =>{\r\n        fetch(\"/unlike\", {\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res =>res.json())\r\n        .then(result =>{\r\n            const newData = data.map(item =>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    //comment\r\n    const makeComment = (text, postId)=>{\r\n        fetch('/comment', {\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res =>res.json())\r\n        .then(result =>{\r\n                const newData = data.map(item =>{\r\n                    if(item._id==result._id){\r\n                        return result\r\n                    }\r\n                    else{\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    //delete post\r\n    const deletepost = (postId) =>{\r\n        fetch(`/deletepost/${postId}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n            \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n        }\r\n        }).then(res =>res.json())\r\n        .then(result =>{\r\n            console.log(result)\r\n            const newData = data.filter(item =>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n            window.location.reload();\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n                        <div className=\"card my-card\" key={item._id}>\r\n                            <h5><Link to={item.postedBy._id !== state._id ? \"/profile/\"+item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id == state._id && <i className=\"material-icons\" style={{cursor:\"pointer\", color:\"red\", float:\"right\"}} onClick={() =>{deletepost(item._id)}}>delete</i>}</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo} alt=\"img\" />\r\n                            </div>\r\n                            <div className=\"card-content input-field\">\r\n                                \r\n                                {\r\n                                    item.likes.includes(state._id)\r\n                                    ? <i className=\"material-icons\" style={{cursor:\"pointer\", color:\"red\"}} onClick={() =>{unlike(item._id)}}>favorite</i>\r\n                                    : <i className=\"material-icons\" style={{cursor:\"pointer\", color:\"red\"}} onClick={() =>{like(item._id)}}>favorite_border</i>\r\n                                }\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record =>{\r\n                                      return  <h6 key={item._id}><strong>{record.postedBy.name}</strong> {record.text}</h6> \r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e) =>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value, item._id)\r\n                                }}>\r\n                                <input type=\"text\" placeholder=\"comment\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\reactJS\\instagram-clone\\client\\src\\components\\CreatePost.js",["72","73"],"import React,{useState, useEffect} from 'react'\r\nimport { useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst CreatePost = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n        if(url){\r\n            fetch(\"/createpost\", {\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url\r\n                })\r\n            }).then(res=>res.json()) \r\n            .then(data =>{\r\n                if(data.error){\r\n                    M.toast({html: data.error, classes: 'rounded #e53935 red darken-1'});\r\n                }\r\n                else{\r\n                    M.toast({html: \"Posted Successfully\", classes: 'rounded #e53935 #1de9b6 teal accent-3'});\r\n                    history.push(\"/\");\r\n                }\r\n            }).catch(error =>{\r\n                console.log(error);\r\n            })\r\n        }\r\n\r\n    },[url])\r\n    const uploadDetails = () =>{\r\n        const data = new FormData\r\n        data.append(\"file\",image);\r\n        data.append(\"upload_preset\",\"instagram-clone\");\r\n        data.append(\"cloud_name\",\"abdulkaleem\");\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/abdulkaleem/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json())\r\n        .then(data =>{\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err =>{console.log(err)})\r\n\r\n       \r\n    }\r\n    return (\r\n        <div className=\"card input-field container \" style={{margin:\"20px auto\", padding:\"20px\", textAlign:\"center\",maxWidth: \"500px\"}}>\r\n            <input type=\"text\" placeholder=\"title\" value={title} onChange={e=> setTitle(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"body\" value={body} onChange={e=> setBody(e.target.value)} />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn waves-effect waves-light #42a5f5 blue lighten-1\">\r\n                    <span>Photo</span>\r\n                    <input type=\"file\"  onChange={e=>{setImage(e.target.files[0])}} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #42a5f5 blue lighten-1\" onClick={()=>uploadDetails()}>Submit</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","D:\\reactJS\\instagram-clone\\client\\src\\reducer\\userReducer.js",["74","75","76","77"],"export const initialState = null;\r\n\r\nexport const reducer = (state, action)=>{\r\n    if(action.type==\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type==\"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type==\"UPDATEPIC\"){\r\n        return{\r\n            ...state,\r\n            pic:action.payload\r\n        }\r\n    }\r\n    else return state\r\n}",["78","79"],"D:\\reactJS\\instagram-clone\\client\\src\\components\\UserProfile.js",["80","81"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { UserContext } from '../App'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nconst UserProfile = () => {\r\n    const [userProfile, setProfile] = useState(null)\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const { userid } = useParams()\r\n    const [showFollow, setShowFollow] = useState(state? !state.following.includes(userid) :true)\r\n\r\n    useEffect(() => {\r\n        fetch(`/user/${userid}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setProfile(result)\r\n                console.log(result)\r\n            })\r\n    }, [])\r\n\r\n    //follow user\r\n    const followUser = () =>{\r\n        fetch(\"/follow\", {\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res =>res.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            dispatch({type:\"UPDATE\", payload:{followers:data.followers, following:data.following}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setProfile((prevState =>{\r\n                return {\r\n                    ...prevState,\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:[...prevState.user.followers, data._id]   //complex\r\n                    }\r\n                }\r\n            }))\r\n            setShowFollow(false)\r\n        })\r\n    }\r\n\r\n        //Unfollow user\r\n        const unfollowUser = () =>{\r\n            fetch(\"/unfollow\", {\r\n                method:\"put\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    unfollowId:userid\r\n                })\r\n            }).then(res =>res.json())\r\n            .then(data =>{\r\n                console.log(data)\r\n                dispatch({type:\"UPDATE\", payload:{followers:data.followers, following:data.following}})\r\n                localStorage.setItem(\"user\",JSON.stringify(data))\r\n                setProfile((prevState =>{\r\n                    const newFollower = prevState.user.followers.filter(item => item!= item._id)\r\n                    return {\r\n                        ...prevState,\r\n                        user:{\r\n                            ...prevState.user,\r\n                            followers:newFollower   //complex\r\n                        }\r\n                    }\r\n                }))\r\n                setShowFollow(true)\r\n            })\r\n        }\r\n    return (\r\n        <>\r\n        {userProfile ? \r\n        \r\n            <div className=\"container\">\r\n            <div className=\"box row\">\r\n                <div className=\"col s12 m4\">\r\n                    <img className=\"profile_pic\" src={userProfile.user.pic} alt=\"profile_photo\" />\r\n                </div>\r\n                <div className=\"col s12 m8\">\r\n                    <h4>{userProfile.user.name}</h4>\r\n                    <h5>{userProfile.user.email}</h5>\r\n                    <div className=\"details\">\r\n                        <div>\r\n                            <h6>{userProfile.posts.length}</h6>\r\n                            <h6>Posts</h6>\r\n                        </div>\r\n                        <div>\r\n                            <h6>{userProfile.user.followers.length}</h6>\r\n                            <h6>Followers</h6>\r\n                        </div>\r\n                        <div>\r\n                            <h6>{userProfile.user.following.length}</h6>\r\n                            <h6>Following</h6>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        showFollow ? <button className=\"btn waves-effect waves-light #42a5f5 blue lighten-1\" onClick={()=> followUser()}>Follow</button>\r\n                                   : <button className=\"btn waves-effect waves-light #42a5f5 blue lighten-1\" onClick={()=> unfollowUser()}>UnFollow</button>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div className=\"row\">\r\n                <h5>{state ? state.name : \"Loading...\"}</h5>\r\n                <p>Marketing Manager</p>\r\n                <p>Content writer</p>\r\n                <p>Romania</p>\r\n            </div> */}\r\n\r\n            <div className=\" gallery\">\r\n                {\r\n                    userProfile.posts.map(item => {\r\n                        return (\r\n                            <img className=\"img\" src={item.photo} alt=\"post\" key={item._id} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n        \r\n        : <h2>loading...</h2>}\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":18,"column":10,"nodeType":"88","messageId":"89","endLine":18,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":27,"column":5,"nodeType":"92","endLine":27,"endColumn":7,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":16,"column":7,"nodeType":"92","endLine":16,"endColumn":12,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":18,"column":22,"nodeType":"98","messageId":"99","endLine":18,"endColumn":34,"fix":"100"},{"ruleId":"101","severity":1,"message":"102","line":32,"column":24,"nodeType":"103","messageId":"104","endLine":32,"endColumn":25,"suggestions":"105"},{"ruleId":"101","severity":1,"message":"102","line":32,"column":49,"nodeType":"103","messageId":"104","endLine":32,"endColumn":50,"suggestions":"106"},{"ruleId":"96","severity":1,"message":"97","line":22,"column":26,"nodeType":"98","messageId":"99","endLine":22,"endColumn":38,"fix":"107"},{"ruleId":"90","severity":1,"message":"108","line":48,"column":7,"nodeType":"92","endLine":48,"endColumn":14,"suggestions":"109"},{"ruleId":"86","severity":1,"message":"87","line":7,"column":12,"nodeType":"88","messageId":"89","endLine":7,"endColumn":17},{"ruleId":"86","severity":1,"message":"110","line":7,"column":19,"nodeType":"88","messageId":"89","endLine":7,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":34,"column":28,"nodeType":"113","messageId":"114","endLine":34,"endColumn":30},{"ruleId":"111","severity":1,"message":"112","line":58,"column":28,"nodeType":"113","messageId":"114","endLine":58,"endColumn":30},{"ruleId":"111","severity":1,"message":"112","line":84,"column":32,"nodeType":"113","messageId":"114","endLine":84,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":118,"column":168,"nodeType":"113","messageId":"114","endLine":118,"endColumn":170},{"ruleId":"90","severity":1,"message":"115","line":38,"column":7,"nodeType":"92","endLine":38,"endColumn":12,"suggestions":"116"},{"ruleId":"96","severity":1,"message":"97","line":40,"column":22,"nodeType":"98","messageId":"99","endLine":40,"endColumn":34,"fix":"117"},{"ruleId":"111","severity":1,"message":"112","line":4,"column":19,"nodeType":"113","messageId":"114","endLine":4,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":7,"column":19,"nodeType":"113","messageId":"114","endLine":7,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":10,"column":19,"nodeType":"113","messageId":"114","endLine":10,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":17,"column":19,"nodeType":"113","messageId":"114","endLine":17,"endColumn":21},{"ruleId":"82","replacedBy":"118"},{"ruleId":"84","replacedBy":"119"},{"ruleId":"90","severity":1,"message":"120","line":22,"column":8,"nodeType":"92","endLine":22,"endColumn":10,"suggestions":"121"},{"ruleId":"111","severity":1,"message":"122","line":70,"column":85,"nodeType":"113","messageId":"114","endLine":70,"endColumn":87},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["125"],"React Hook useEffect has a missing dependency: 'uploadDetails'. Either include it or remove the dependency array.",["126"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"127","text":"128"},"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["129","130"],["131","132"],{"range":"133","text":"128"},"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["134"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["135"],{"range":"136","text":"128"},["123"],["124"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["137"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},[587,587],"()",{"messageId":"142","fix":"143","desc":"144"},{"messageId":"145","fix":"146","desc":"147"},{"messageId":"142","fix":"148","desc":"144"},{"messageId":"145","fix":"149","desc":"147"},[657,657],{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},[1377,1377],{"desc":"154","fix":"155"},"Update the dependencies array to be: [dispatch, history]",{"range":"156","text":"157"},"Update the dependencies array to be: [uploadDetails, url]",{"range":"158","text":"159"},"removeEscape",{"range":"160","text":"161"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"162","text":"163"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"164","text":"161"},{"range":"165","text":"163"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"166","text":"167"},"Update the dependencies array to be: [body, history, title, url]",{"range":"168","text":"169"},"Update the dependencies array to be: [userid]",{"range":"170","text":"171"},[963,965],"[dispatch, history]",[516,521],"[uploadDetails, url]",[1067,1068],"",[1067,1067],"\\",[1092,1093],[1092,1092],[1731,1738],"[dispatch, image, state]",[1302,1307],"[body, history, title, url]",[763,765],"[userid]"]